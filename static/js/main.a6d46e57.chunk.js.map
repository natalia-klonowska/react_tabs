{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","defaultTab","selectedTab","find","tab","id","className","map","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAO,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cACpCC,EAAaH,EAAK,GAClBI,EAAc,WAClB,OAAOJ,EAAKK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAON,MAAkBE,GAGzD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKK,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAACH,GAAD,OACR,oBACEE,UAAWF,EAAIC,KAAOH,IAAcG,GAAK,YAAc,GACvD,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,kBACPP,IAAcG,KAAOD,EAAIC,IAAML,EAAcI,IAJjD,SAOGA,EAAIM,SATFN,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,IAAcS,cChCVb,EAAc,CACzB,CAAEO,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,IAAMX,EAAaH,EAAK,GACxB,EAA0Ce,mBAASZ,EAAWI,IAA9D,mBAAON,EAAP,KAAsBe,EAAtB,KAUA,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,oCATKR,EAAKK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAON,MAAkBE,GAUjBS,SAEpC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAZgB,SAACI,GACrBU,EAAiBV,EAAIC,WCnBzBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a6d46e57.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ninterface TabsProps {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  const defaultTab = tabs[0];\n  const selectedTab = () => {\n    return tabs.find((tab) => tab.id === selectedTabId) || defaultTab;\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={tab.id === selectedTab().id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => (\n                  selectedTab().id !== tab.id && onTabSelected(tab)\n                )}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab().content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const defaultTab = tabs[0];\n  const [selectedTabId, setSelectedTabId] = useState(defaultTab.id);\n\n  const selectedTab = () => {\n    return tabs.find((tab) => tab.id === selectedTabId) || defaultTab;\n  };\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab().title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}